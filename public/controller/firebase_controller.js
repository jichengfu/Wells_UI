import * as Constant from "../model/constant.js";
import { Well } from "../model/well.js";

export async function signIn(email, password) {
  await firebase.auth().signInWithEmailAndPassword(email, password);
}

export async function signOut() {
  await firebase.auth().signOut();
}

export async function signUp(email, password) {
  await firebase.auth().createUserWithEmailAndPassword(email, password);
}

export async function addWell(well) {
  const ref = await firebase
    .firestore()
    .collection(Constant.collectionName.WELLS)
    .add(well.serialize());
  return ref.id; // unique document id generated by Firestore
}

export async function getEditWell(wellName) {
  const snapShot = await firebase
    .firestore()
    .collection(Constant.collectionName.WELLS)
    .where("name", "==", wellName)
    .get();
  const well = [];
  snapShot.forEach((doc) => {
    const w = new Well(doc.data());
    w.docId = doc.id;
    well.push(w);
  });
  return well;
}

export async function updateWell(wellId, updateInfo) {
  await firebase
    .firestore()
    .collection(Constant.collectionName.WELLS)
    .doc(wellId)
    .update(updateInfo);
}

export async function getShowingWells() {
  const wells = [];
  const snapShot = await firebase
    .firestore()
    .collection(Constant.collectionName.WELLS)
    .where("showing", "==", true)
    .get();
  snapShot.forEach((doc) => {
    const w = new Well(doc.data());
    w.docId = doc.id;
    wells.push(w);
  });
  return wells;
}

export async function getWellsByGroup(groupName) {
  const wells = [];
  const snapShot = await firebase
    .firestore()
    .collection(Constant.collectionName.WELLS)
    .where("group", "==", groupName)
    .get();
  snapShot.forEach((doc) => {
    const w = new Well(doc.data());
    w.docId = doc.id;
    wells.push(w);
  });
  return wells;
}
